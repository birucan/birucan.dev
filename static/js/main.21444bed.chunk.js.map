{"version":3,"sources":["components/Window/Window.jsx","components/Applications/IntroWindow/IntroWindow.jsx","components/Screen/Screen.jsx","App.js","reportWebVitals.js","index.js"],"names":["Window","content","title","maximized","minimized","width","height","xPos","yPos","clickHandle","zIndex","id","active","style","useState","setMaximizedState","canDrag","setCanDrag","default","x","y","onClick","minWidth","minHeight","disableDragging","padding","className","onMouseLeave","onMouseOver","e","IntroWindow","textAlign","justifyContent","left","window","open","Screen","Math","random","currentTop","initHeight","initWidth","initX","initY","activeWindows","setActiveWindows","windowNum","windowRender","setWindowRender","updateState","setUpdateState","clickWindow","oldZIndex","console","log","map","useEffect","backgroundColor","displayName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21444bed.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { Rnd } from \"react-rnd\";\r\n\r\n// \r\n//position correspond to the upper left corner of the window \r\nexport default function Window({content=null,\r\n    title=\"\", \r\n    maximized=false,\r\n    minimized=false,\r\n    width=100,\r\n    height=100,\r\n    xPos=0,\r\n    yPos=0,\r\n    clickHandle,\r\n    zIndex,\r\n    id,\r\n    active=false,\r\n    style\r\n  }) {\r\n\r\n    const [maximizedState, setMaximizedState]= useState(maximized);\r\n\r\n    const [canDrag, setCanDrag] = useState(false)\r\n\r\n\r\n      const handleMaximize=(e)=>{\r\n        setMaximizedState(true)\r\n        //TODO change position to 0,0 change width and heigh to the size of the view port\r\n\r\n      }\r\n\r\n\r\n    return (\r\n      <Rnd     \r\n      default={{\r\n        x: xPos,\r\n        y: yPos,\r\n        width: width,\r\n        height: height\r\n      }}\r\n      onClick={()=>clickHandle(id, zIndex)}\r\n      \r\n      minWidth={width}\r\n      minHeight={height} \r\n      disableDragging={!canDrag} \r\n      style={{ ...style, width: width, height: height, padding:'2px' }} className=\"window\" >\r\n        <div  >\r\n        <div className={(active===true)?\"title-bar\":\"title-bar inactive\"} onMouseLeave={()=>{setCanDrag(false)}} onMouseOver={()=>{setCanDrag(true)}} >\r\n          <div className=\"title-bar-text\" >{title}</div>\r\n          <div className=\"title-bar-controls\">\r\n            <button aria-label=\"Minimize\" />\r\n            <button aria-label=\"Maximize\" onClick={handleMaximize}/>\r\n            <button aria-label=\"Close\" />\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"window-body\">\r\n          {content}\r\n        </div>\r\n        </div>\r\n\r\n      </Rnd>\r\n\r\n\r\n\r\n\r\n    );\r\n};","import React,{useState} from \"react\";\nimport Window from \"../../Window/Window\";\nimport '98.css'\n\n\nexport default function IntroWindow() {\n\n    return (\n\n                <>\n                    <p style={{ textAlign: \"center\" }}>Hello I'm Tomas Kavanagh, this will be my portafolio site, currently a WIP. for now you can check my github.</p>\n                    <br/><br/>\n\n                    <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\n                    <button style={{left:100 }}onClick={()=>{ window.open(\"https://github.com/birucan\");}}>\n                        github\n                    </button>\n                 </div>\n\n                </>\n\n    );\n}\nIntroWindow.displayName = \"Intro\";\n","import React,{useState, useEffect} from \"react\";\r\nimport Window from \"../Window/Window\";\r\nimport IntroWindow from \"../Applications/IntroWindow/IntroWindow\";\r\nimport '98.css'\r\n\r\n\r\nexport default function Screen() {\r\n    const [activeWindows, setActiveWindows] = useState([{id:0, window:<IntroWindow key={Math.random()}/>, zIndex:1, currentTop:false, title:\"Intro\", initHeight:150, initWidth:200, initX:20, initY:20}, \r\n    {id:2, window:<IntroWindow key={Math.random()}/>, zIndex:2, currentTop:true, title:\"Intro2\", initHeight:150, initWidth:200, initX:100, initY:100}]);\r\n    const [windowNum, setWindowNum] = useState(2);\r\n    const [windowRender, setWindowRender] = useState([])\r\n    const [updateState, setUpdateState] = useState(Math.random())\r\n\r\n    const addWindow=(newWindow, title=\"untitled\", initHeight=200, initWidth=200, initX=0, initY=0)=>{\r\n        setWindowNum(windowNum+1)\r\n        setActiveWindows(activeWindows.map(window => {\r\n            return {...window, id:window.id, window:window.window, zIndex:window.zIndex, currentTop:false}\r\n        }));\r\n        setActiveWindows(...activeWindows, {id:windowNum, window:newWindow, zIndex:windowNum, currentTop:true, title:title, initHeight:initHeight, initWidth:initWidth, initX:initX, initY:initY});\r\n        setUpdateState(Math.random())\r\n    }\r\n\r\n    const closeWindow=(id)=>{\r\n        setWindowNum(windowNum-1)\r\n\r\n        let delElement;\r\n\r\n        setActiveWindows(activeWindows.map(window => {\r\n\r\n            if(window.id = id){\r\n                delElement= window;\r\n                return window;\r\n            }else{\r\n                if(window.zIndex>windowNum){\r\n                    return {...window, id:window.id, window:window.window, zIndex:window.zIndex-1, currentTop:false}\r\n                }else{\r\n                    return window;\r\n                }\r\n            }\r\n        }));\r\n\r\n        setActiveWindows(activeWindows.filter(item => item !== delElement))\r\n        setUpdateState(Math.random())\r\n\r\n    }\r\n\r\n    const clickWindow=(id, oldZIndex)=>{\r\n        console.log(id, oldZIndex)\r\n\r\n        setActiveWindows(activeWindows.map(window => {\r\n\r\n            if(window.id === id){\r\n                return {...window, zIndex:windowNum, currentTop:true};\r\n            }else{\r\n                if(window.zIndex===windowNum){\r\n                    return {...window, zIndex:oldZIndex, currentTop:false}\r\n                }else{\r\n                    return {...window, currentTop:false};\r\n                }\r\n            }\r\n        }));\r\n\r\n        setUpdateState(Math.random())\r\n    }\r\n\r\n    useEffect(() => {\r\n        setWindowRender(activeWindows.map((window)=>{\r\n          return (<Window\r\n                    zIndex={window.zIndex}\r\n                    id={window.id}\r\n                    style={{zIndex:window.zIndex}} \r\n                    content={window.window} \r\n                    title={window.title} \r\n                    key={window.id} \r\n                    height={window.initHeight}\r\n                    width={window.initWidth}\r\n                    xPos={window.initX}\r\n                    yPos={window.initY}\r\n                    clickHandle={clickWindow}\r\n                    active={window.currentTop}\r\n                \r\n                    />) ;\r\n        }))\r\n\r\n    }, [updateState, windowNum])\r\n    \r\n    return (\r\n        <div style={{backgroundColor:\"#008080\", minHeight:'100vh',minWidth:'100vw', }}>\r\n           { windowRender}\r\n        </div>\r\n\r\n    );\r\n}","\nimport React,{useState} from 'react';\nimport Screen from \"./components/Screen/Screen\"\nimport Window from \"./components/Window/Window\"\nimport {DndProvider} from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport '98.css'\n\n\nfunction App() {\n\n\n  return (\n\n    <div className=\"App\">\n      <Screen></Screen>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}