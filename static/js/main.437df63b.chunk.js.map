{"version":3,"sources":["components/Window/Window.jsx","components/Applications/IntroWindow/IntroWindow.jsx","components/Taskbar/Taskbar.jsx","utils/fileManager.js","components/Desktop/Desktop.jsx","components/Screen/Screen.jsx","App.js","reportWebVitals.js","index.js"],"names":["Window","content","title","maximized","minimized","initWidth","initHeight","xPos","yPos","clickHandle","zIndex","id","active","style","handleMinimize","handleClose","icon","useState","x","y","pos","setPos","height","width","size","setSize","prevPos","setPrevPos","prevSize","setPrevSize","maximizedState","setMaximizedState","canDrag","setCanDrag","default","position","onDragStop","e","d","onDragStart","onResizeStop","direction","ref","delta","offsetHeight","offsetWidth","onMouseDown","minWidth","minHeight","disableDragging","padding","className","onMouseLeave","onMouseOver","display","flexDirection","alignItems","margin","alt","src","stopPropagation","onClick","newSize","window","innerHeight","innerWidth","maximizeHandler","IntroWindow","textAlign","justifyContent","left","open","Taskbar","activeWindows","clickWindow","sunk","backgroundColor","boxShadow","outline","outlineOffset","buttonStyle","background","bottom","borderTop","paddingLeft","paddingRight","class","map","currentTop","gap","displayName","fileMap","Map","set","type","dir","initX","initY","getFile","key","has","get","Desktop","desktop","require","root","flexFlow","alignContent","Object","keys","item","console","log","border","color","textDecoration","maxHeight","maxWidth","overflow","marginTop","top","Screen","Math","random","setActiveWindows","windowNum","setWindowNum","windowRender","setWindowRender","updateState","setUpdateState","update","closeWindow","delElement","filter","oldZIndex","useEffect","visibility","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.437df63b.chunk.js","sourcesContent":["import React,{useState,useRef} from \"react\";\r\nimport { Rnd } from \"react-rnd\";\r\n\r\n// \r\n//position correspond to the upper left corner of the window \r\nexport default function Window({content=null,\r\n    title=\"\", \r\n    maximized=false,\r\n    minimized=false,\r\n    initWidth=100,\r\n    initHeight=100,\r\n    xPos=0,\r\n    yPos=0,\r\n    clickHandle,\r\n    zIndex,\r\n    id,\r\n    active=false,\r\n    style,\r\n    handleMinimize,\r\n    handleClose, \r\n    icon\r\n  }) {\r\n\r\n\r\n    const [pos, setPos] = useState({x:xPos, y:yPos})\r\n    const [size, setSize] = useState({height:initHeight, width:initWidth})\r\n\r\n    const [prevPos, setPrevPos] = useState({x:xPos, y:yPos})\r\n    const [prevSize, setPrevSize] = useState({height:initHeight, width:initWidth})\r\n\r\n    const [maximizedState, setMaximizedState]= useState(maximized);\r\n\r\n    const [canDrag, setCanDrag] = useState(false)\r\n\r\n      const maximizeHandler=()=>{\r\n        if(!maximizedState){\r\n          setPrevPos(pos)\r\n          setPos({x:0, y:0})\r\n          setPrevSize(size)\r\n          let newSize= {height:window.innerHeight-38, width:window.innerWidth-10}\r\n          setSize(newSize)\r\n          setMaximizedState(true)\r\n        }else{\r\n          setPos(prevPos)\r\n          setSize(prevSize)\r\n          setMaximizedState(false)\r\n        }\r\n      }\r\n\r\n    return (\r\n      <Rnd     \r\n      default={{\r\n        x: xPos,\r\n        y: yPos,\r\n        width: initWidth,\r\n        height: initHeight\r\n      }}\r\n      position={{\r\n        x: pos.x,\r\n        y: pos.y,\r\n      }}\r\n      size={{\r\n        height:size.height,\r\n        width:size.width\r\n      }}\r\n      onDragStop={(e, d) => { setPos({ x: d.x, y: d.y });}}\r\n      onDragStart={ (e,d)=>{ \r\n        if(maximizedState===true){\r\n        setSize(prevSize)\r\n        setMaximizedState(false)\r\n        \r\n        }}}\r\n      onResizeStop={(e, direction, ref, delta, position) => {\r\n        setSize({height: ref.offsetHeight, width:ref.offsetWidth})\r\n      }}\r\n      onMouseDown={()=>clickHandle(id, zIndex) }\r\n      \r\n      minWidth={initWidth}\r\n      minHeight={initHeight} \r\n      disableDragging={!canDrag} \r\n      style={{ ...style, width: size.width, height: size.height, padding:'2px' }} className=\"window\" >\r\n\r\n        <div className={(active===true)?\"title-bar\":\"title-bar inactive\"} onMouseLeave={()=>{setCanDrag(false)}} onMouseOver={()=>{setCanDrag(true)}} >\r\n\r\n        <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"center\"}}>\r\n          <img style={{padding:\"0px 0px 0px 0px\", margin:\"0px 0px 0px 0px\"}}height={16} width={16} alt=\"\" src={icon}/>\r\n          <div className=\"title-bar-text\" > {title}</div>\r\n        </div>\r\n          \r\n          <div className=\"title-bar-controls\" onMouseOver={(e)=>{e.stopPropagation(); setCanDrag(false)}}>\r\n            <button aria-label=\"Minimize\"onClick={()=>{handleMinimize(id)}} />\r\n            <button aria-label={(maximizedState)?\"Restore\":\"Maximize\"} onClick={()=>maximizeHandler()}/>\r\n            <button aria-label=\"Close\" onClick={(e)=>{handleClose(id,e)}}/>\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"window-body\">\r\n          {content}\r\n        </div>\r\n        \r\n\r\n      </Rnd>\r\n\r\n\r\n\r\n\r\n    );\r\n};","import React,{useState} from \"react\";\r\nimport '98.css'\r\n\r\n\r\nexport default function IntroWindow() {\r\n\r\n    return (\r\n\r\n                <>\r\n                    <p style={{ textAlign: \"center\" }}>Hello I'm Tomas Kavanagh, this will be my portafolio site, it's meant to immitate a functional windows98 desktop, currently a work in progress, for now you can visit my github</p>\r\n                    <br/><br/>\r\n\r\n                    <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\r\n                    <button style={{left:100 }}onClick={()=>{ window.open(\"https://github.com/birucan\");}}>\r\n                        github\r\n                    </button>\r\n\r\n\r\n                 </div>\r\n\r\n                </>\r\n\r\n    );\r\n}\r\nIntroWindow.displayName = \"Intro\";\r\n","import React,{useState} from \"react\";\r\n\r\n\r\nexport default function Taskbar({activeWindows, handleMinimize, clickWindow}){\r\n\r\n    const sunk = { backgroundColor:\"#b0b0b0\", boxShadow: \"inset -1px -1px #ffffff, inset -2px -2px #dfdfdf\", padding: \"2px 11px 0 13px\", outline: \"1px dotted #000000\", outlineOffset: \"-4px\"}\r\n    const buttonStyle ={textAlign:\"right\"}\r\n    return(\r\n        <div style={{   \r\n            background:\"#c0c0c0\",\r\n            height:35,\r\n            width:\"100vw\",\r\n            position: \"fixed\",\r\n            bottom: 0,\r\n            left: 0,\r\n            borderTop: \"2px solid #fff\",\r\n            zIndex:2147483600}}>\r\n\r\n            <div className=\"startButtonContainer\" style={{    \r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                }}>\r\n                <button style={{  \r\n                    paddingLeft: 8,\r\n                    paddingRight: 5,\r\n                    height: 32,\r\n                    }}>\r\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"center\"}}>\r\n                        <img style={{padding:\"0px 8px 0px 0px\", margin:\"0px 0px 0px 0px\"}}height={24} width={24} alt=\"\" src=\"icons/start.png\"/>\r\n                        <b>Start</b>\r\n                    </div>\r\n\r\n                </button>\r\n\r\n                <div class=\"status-bar\"/>\r\n                \r\n                {activeWindows.map((window)=>{\r\n                    return(\r\n                        <>\r\n                        \r\n                            <button style={(window.currentTop && !window.minimized)?{...sunk, ...buttonStyle}:{...buttonStyle}} onClick={()=>{(window.minimized)?handleMinimize(window.id):clickWindow(window.id, window.zIndex)}}>\r\n                                <div style={{display: \"flex\", gap: 15, flexDirection: \"row\", alignItems: \"center\"}}>\r\n                                    \r\n                                    <img style={{padding:\"0px 0px 0px 0px\", margin:\"0px 0px 0px 0px\"}}height={24} width={24} alt=\"\" src={window.icon}/>\r\n\r\n                                    <div>\r\n                                        {window.title}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </button>\r\n                        </>\r\n                        \r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            \r\n\r\n        </div>\r\n    );\r\n}","export const fileMap = new Map();\r\n//folders\r\nfileMap.set(\"root\", {type: \"folder\", icon:\"default\"})\r\nfileMap.set(\"desktop\", {type: \"folder\", icon:\"icons/desktop.png\"})\r\nfileMap.set(\"testFolder\", {type: \"folder\", icon:\"default\"})\r\nfileMap.set(\"testFolder2\", {type: \"folder\", icon:\"default\"})\r\n//files\r\nfileMap.set(\"Intro\", {type: \".exe\", id:1, dir:\"../Applications/IntroWindow/IntroWindow\", /*zIndex:1,*/ currentTop:false, icon:\"icons/intro.png\", title:\"Intro\", minimized:false, initHeight:200, initWidth:200, initX:20, initY:20})\r\nfileMap.set(\"TestApp\", {type: \".exe\", id:1, dir:\"../Applications/TestApp/TestApp\", /*zIndex:1,*/ currentTop:false, icon:\"icons/question.png\", title:\"Intro\", minimized:false, initHeight:200, initWidth:200, initX:20, initY:20})\r\n\r\nexport const initMap=()=>{\r\n\r\n}\r\n\r\nexport const getFile=(key)=>{\r\n    if(fileMap.has(key)){\r\n        return fileMap.get(key);\r\n    }else{\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const createFile=(obj)=>{\r\n    return \"key\"\r\n}\r\n\r\nexport const addFileToFolder=(fileKey, folderKey)=>{\r\n\r\n}\r\n\r\n\r\n","import React, {useState} from \"react\";\r\n\r\nimport { getFile, createFile, addFileToFolder } from \"../../utils/fileManager\";\r\n\r\nexport default function Desktop(){\r\n    const desktop = require('../../objects/defaultFolders.json').root.desktop;\r\n\r\n\r\n    return(\r\n        <>\r\n            <div style={{\r\n              display: \"flex\",\r\n              flexFlow: \"column wrap\",\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              alignContent: \"flex-start\",\r\n            }}>\r\n                {\r\n                    Object.keys(desktop).map((item)=>{\r\n                        console.log(getFile(item).icon)\r\n                        return(\r\n                            <div style={{\r\n                              position: \"relative\",\r\n                              display: \"block\",\r\n                              outline: \"none\",\r\n                              background: \"none\",\r\n                              border: \"none\",\r\n                              color: \"initial\",\r\n                              textDecoration: \"none\",\r\n                              padding: \"1px 7px 2px\",\r\n                              padding: \"initial\",\r\n                              margin: \"3px\",\r\n                              width: \"52px\",\r\n                              height: \"58px\",\r\n                              textAlign: \"center\",\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              alignItems: \"center\"\r\n                            }}>\r\n\r\n                                <img height={32} width={32} alt=\"\" src={(getFile(item).type===\"folder\" && getFile(item).icon===\"default\")?\"icons/folder.png\":getFile(item).icon}/>\r\n                                <div style={{\r\n                                  maxHeight: 22,\r\n                                  padding: \"2px 3px\",\r\n                                  maxWidth: \"100%\",\r\n                                  overflow: \"hidden\",\r\n                                  display: \"inline-block\",\r\n                                  position: \"absolute\",\r\n                                  marginTop: 2,\r\n                                  top: 33,\r\n                                }}>\r\n                                    {item}\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}","import React,{useState, useEffect} from \"react\";\r\nimport Window from \"../Window/Window\";\r\nimport IntroWindow from \"../Applications/IntroWindow/IntroWindow\";\r\nimport Taskbar from \"../Taskbar/Taskbar\";\r\nimport Desktop from \"../Desktop/Desktop\";\r\n\r\n\r\n\r\nexport default function Screen() {\r\n    const [activeWindows, setActiveWindows] = useState([{id:1, window:<IntroWindow key={Math.random()}/>, zIndex:1, currentTop:false, icon:\"icons/intro.png\", title:\"Intro\", minimized:false, initHeight:200, initWidth:200, initX:20, initY:20}, \r\n    {id:2, window:<IntroWindow key={Math.random()}/>, zIndex:2, currentTop:true, title:\"Intro2\", icon:\"icons/intro.png\", minimized:false, initHeight:200, initWidth:200, initX:200, initY:100}]);\r\n    const [windowNum, setWindowNum] = useState(2);\r\n    const [windowRender, setWindowRender] = useState([])\r\n    const [updateState, setUpdateState] = useState(Math.random())\r\n\r\n\r\n    const update = ()=>{\r\n        setUpdateState(Math.random())\r\n    }\r\n\r\n    const addWindow=(newWindow, title=\"untitled\", initHeight=200, initWidth=200, initX=0, initY=0)=>{\r\n        setWindowNum(windowNum+1)\r\n        setActiveWindows(activeWindows.map(window => {\r\n            return {...window, id:window.id, window:window.window, zIndex:window.zIndex, currentTop:false}\r\n        }));\r\n        setActiveWindows(...activeWindows, {id:windowNum, window:newWindow, zIndex:windowNum, currentTop:true, title:title, initHeight:initHeight, initWidth:initWidth, initX:initX, initY:initY});\r\n        update()\r\n    }\r\n\r\n    const closeWindow=(id,e )=>{\r\n        e.stopPropagation();\r\n        setWindowNum(windowNum-1)\r\n\r\n        let delElement;\r\n\r\n        setActiveWindows(activeWindows.map(window => {\r\n\r\n            if(window.id === id){\r\n                delElement= window;\r\n                return window;\r\n            }else{\r\n                if(window.zIndex>windowNum){\r\n                    return {...window, id:window.id, window:window.window, zIndex:window.zIndex-1, currentTop:false}\r\n                }else{\r\n                    return window;\r\n                }\r\n            }\r\n        }));\r\n\r\n        setActiveWindows(activeWindows.filter(item => item !== delElement))\r\n        update()\r\n\r\n    }\r\n\r\n    const clickWindow=(id, oldZIndex)=>{\r\n\r\n        setActiveWindows(activeWindows.map(window => {\r\n\r\n            if(window.id === id){\r\n                return {...window, zIndex:windowNum, currentTop:true};\r\n            }else{\r\n                if(window.zIndex===windowNum){\r\n                    return {...window, zIndex:oldZIndex, currentTop:false}\r\n                }else{\r\n                    return {...window, currentTop:false};\r\n                }\r\n            }\r\n        }));\r\n\r\n        update()\r\n    }\r\n\r\n    const handleMinimize = (id) =>{\r\n        setActiveWindows(activeWindows.map(window => {\r\n\r\n            if(window.id === id){\r\n\r\n                return {...window, minimized:(window.minimized)?false:true, currentTop:(window.minimized)?false:true};\r\n            }else{\r\n                return window\r\n            }\r\n        }));\r\n\r\n        update()\r\n    }\r\n    \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setWindowRender(activeWindows.map((window)=>{\r\n        \r\n          return (<Window\r\n                    zIndex={window.zIndex}\r\n                    id={window.id}\r\n                    style={{zIndex:window.zIndex, visibility:(window.minimized)?\"hidden\":\"visible\"}} \r\n                    content={window.window} \r\n                    title={window.title} \r\n                    key={window.id} \r\n                    initHeight={window.initHeight}\r\n                    initWidth={window.initWidth}\r\n                    xPos={window.initX}\r\n                    yPos={window.initY}\r\n                    clickHandle={clickWindow}\r\n                    handleClose={closeWindow}\r\n                    handleMinimize={handleMinimize}\r\n                    active={window.currentTop}\r\n                    icon={window.icon}\r\n                \r\n                    />) ;\r\n        }))\r\n\r\n    }, [updateState, windowNum])\r\n    \r\n    return (\r\n        <>\r\n        <div style={{backgroundColor:\"#008080\", minHeight:'100vh',minWidth:'100vw', overflow:\"hidden\",}}>\r\n        \r\n           { windowRender}\r\n        <Desktop/>\r\n        </div>\r\n        <Taskbar activeWindows={activeWindows} handleMinimize={handleMinimize} clickWindow={clickWindow}/>\r\n        </> \r\n\r\n    );\r\n}","\r\nimport React,{useState} from 'react';\r\nimport Screen from \"./components/Screen/Screen\"\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Screen></Screen>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}