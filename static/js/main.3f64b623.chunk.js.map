{"version":3,"sources":["components/Window/Window.jsx","components/Applications/IntroWindow/IntroWindow.jsx","components/Screen/Screen.jsx","App.js","reportWebVitals.js","index.js"],"names":["Window","content","title","maximized","minimized","width","height","xPos","yPos","clickHandle","zIndex","id","active","useState","setMaximizedState","canDrag","setCanDrag","default","x","y","onClick","minWidth","minHeight","disableDragging","style","padding","className","onMouseLeave","onMouseOver","e","IntroWindow","textAlign","justifyContent","left","window","open","Screen","currentTop","initHeight","initWidth","initX","initY","activeWindows","setActiveWindows","windowNum","windowRender","setWindowRender","Math","random","updateState","setUpdateState","clickWindow","oldZIndex","map","useEffect","console","log","backgroundColor","displayName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f64b623.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { Rnd } from \"react-rnd\";\r\n\r\n// \r\n//position correspond to the upper left corner of the window \r\nexport default function Window({content=null,\r\n    title=\"\", \r\n    maximized=false,\r\n    minimized=false,\r\n    width=100,\r\n    height=100,\r\n    xPos=0,\r\n    yPos=0,\r\n    clickHandle,\r\n    zIndex,\r\n    id,\r\n    active=false,\r\n  }) {\r\n\r\n    const [maximizedState, setMaximizedState]= useState(maximized);\r\n\r\n    const [canDrag, setCanDrag] = useState(false)\r\n\r\n\r\n      const handleMaximize=(e)=>{\r\n        setMaximizedState(true)\r\n        //TODO change position to 0,0 change width and heigh to the size of the view port\r\n\r\n      }\r\n\r\n\r\n    return (\r\n      <Rnd     \r\n      default={{\r\n        x: xPos,\r\n        y: yPos,\r\n        width: width,\r\n        height: height\r\n      }}\r\n      onClick={()=>clickHandle(id, zIndex)}\r\n      \r\n      minWidth={width}\r\n      minHeight={height} \r\n      disableDragging={!canDrag} \r\n      style={{ width: width, height: height, padding:'2px' }} className=\"window\" >\r\n        <div  >\r\n        <div className={(active===true)?\"title-bar\":\"title-bar inactive\"} onMouseLeave={()=>{setCanDrag(false)}} onMouseOver={()=>{setCanDrag(true)}} >\r\n          <div className=\"title-bar-text\" >{title}</div>\r\n          <div className=\"title-bar-controls\">\r\n            <button aria-label=\"Minimize\" />\r\n            <button aria-label=\"Maximize\" onClick={handleMaximize}/>\r\n            <button aria-label=\"Close\" />\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"window-body\">\r\n          {content}\r\n        </div>\r\n        </div>\r\n\r\n      </Rnd>\r\n\r\n\r\n\r\n\r\n    );\r\n};","import React,{useState} from \"react\";\r\nimport Window from \"../../Window/Window\";\r\nimport '98.css'\r\n\r\n\r\nexport default function IntroWindow() {\r\n\r\n    return (\r\n\r\n                <>\r\n                    <p style={{ textAlign: \"center\" }}>Hello I'm Tomas Kavanagh, this will be my portafolio site, currently a WIP. for now you can check my github.</p>\r\n                    <br/><br/>\r\n\r\n                    <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\r\n                    <button style={{left:100 }}onClick={()=>{ window.open(\"https://github.com/birucan\");}}>\r\n                        github\r\n                    </button>\r\n                 </div>\r\n\r\n                </>\r\n\r\n    );\r\n}\r\nIntroWindow.displayName = \"Intro\";\r\n","import React,{useState, useEffect} from \"react\";\r\nimport Window from \"../Window/Window\";\r\nimport IntroWindow from \"../Applications/IntroWindow/IntroWindow\";\r\nimport '98.css'\r\n\r\n\r\nexport default function Screen() {\r\n    const [activeWindows, setActiveWindows] = useState([{id:0, window:<IntroWindow key={0}/>, zIndex:1, currentTop:false, title:\"Intro\", initHeight:150, initWidth:200, initX:20, initY:20}, \r\n    {id:2, window:<IntroWindow key={2}/>, zIndex:2, currentTop:true, title:\"Intro2\", initHeight:150, initWidth:200, initX:100, initY:100}]);\r\n    const [windowNum, setWindowNum] = useState(2);\r\n    const [windowRender, setWindowRender] = useState([])\r\n    const [updateState, setUpdateState] = useState(Math.random())\r\n\r\n    const addWindow=(newWindow, title=\"untitled\", initHeight=200, initWidth=200, initX=0, initY=0)=>{\r\n        setWindowNum(windowNum+1)\r\n        setActiveWindows(activeWindows.map(window => {\r\n            return {...window, id:window.id, window:window.window, zIndex:window.zIndex, currentTop:false}\r\n        }));\r\n        setActiveWindows(...activeWindows, {id:windowNum, window:newWindow, zIndex:windowNum, currentTop:true, title:title, initHeight:initHeight, initWidth:initWidth, initX:initX, initY:initY});\r\n        setUpdateState(Math.random())\r\n    }\r\n\r\n    const closeWindow=(id)=>{\r\n        setWindowNum(windowNum-1)\r\n\r\n        let delElement;\r\n\r\n        setActiveWindows(activeWindows.map(window => {\r\n\r\n            if(window.id = id){\r\n                delElement= window;\r\n                return window;\r\n            }else{\r\n                if(window.zIndex>windowNum){\r\n                    return {...window, id:window.id, window:window.window, zIndex:window.zIndex-1, currentTop:false}\r\n                }else{\r\n                    return window;\r\n                }\r\n            }\r\n        }));\r\n\r\n        setActiveWindows(activeWindows.filter(item => item !== delElement))\r\n        setUpdateState(Math.random())\r\n\r\n    }\r\n\r\n    const clickWindow=(id, oldZIndex)=>{\r\n\r\n        setActiveWindows(activeWindows.map(window => {\r\n\r\n            if(window.id = id){\r\n                return {...window, zIndex:windowNum, currentTop:true};\r\n            }else{\r\n                if(window.zIndex===windowNum){\r\n                    return {...window, zIndex:oldZIndex, currentTop:false}\r\n                }else{\r\n                    return {...window, currentTop:false};\r\n                }\r\n            }\r\n        }));\r\n\r\n        setUpdateState(Math.random())\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect\")\r\n        setWindowRender(activeWindows.map((window)=>{\r\n            console.log(\"a\", window)\r\n          return (<Window\r\n                    zIndex={window.zIndex}\r\n                    id={window.id}\r\n                    style={{zIndex:window.zIndex}} \r\n                    content={window.window} \r\n                    title={window.title} \r\n                    key={window.id} \r\n                    height={window.initHeight}\r\n                    width={window.initWidth}\r\n                    xPos={window.initX}\r\n                    yPos={window.initY}\r\n                    clickHandle={clickWindow}\r\n                    active={window.currentTop}\r\n                \r\n                    />) ;\r\n        }))\r\n\r\n    }, [updateState, windowNum])\r\n    \r\n    return (\r\n        <div style={{backgroundColor:\"#008080\", minHeight:'100vh',minWidth:'100vw', }}>\r\n           { windowRender}\r\n        </div>\r\n\r\n    );\r\n}","\r\nimport React,{useState} from 'react';\r\nimport Screen from \"./components/Screen/Screen\"\r\nimport Window from \"./components/Window/Window\"\r\nimport {DndProvider} from 'react-dnd'\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport '98.css'\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n      <Screen></Screen>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}