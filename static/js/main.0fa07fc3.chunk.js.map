{"version":3,"sources":["components/Window/Window.jsx","components/Applications/IntroWindow/IntroWindow.jsx","components/Applications/ResumeDisplay/ResumeDisplay.tsx","types.ts","State/global.tsx","components/Taskbar/Taskbar.jsx","components/Applications/TestApp/TestApp.jsx","components/Applications/FileExplorer/FileExplorer.tsx","components/Applications/utils/fileManager.tsx","components/Desktop/Desktop.jsx","components/Screen/Screen.jsx","App.js","reportWebVitals.js","index.js"],"names":["Window","content","title","maximized","minimized","initWidth","initHeight","xPos","yPos","clickHandle","zIndex","id","active","style","handleMinimize","handleClose","icon","useState","x","y","pos","setPos","height","width","size","setSize","prevPos","setPrevPos","prevSize","setPrevSize","maximizedState","setMaximizedState","canDrag","setCanDrag","default","position","onDragStop","e","d","onDragStart","onResizeStop","direction","ref","delta","offsetHeight","offsetWidth","onMouseDown","minWidth","minHeight","disableDragging","padding","className","onMouseLeave","onMouseOver","display","flexDirection","alignItems","maxWidth","margin","alt","src","textOverflow","stopPropagation","onClick","newSize","window","innerHeight","innerWidth","maximizeHandler","IntroWindow","textAlign","justifyContent","left","open","displayName","PDFDisplay","pdf","data","type","href","ValidTypeEnum","FileEnum","keyList","currentWindowState","atom","key","CURRENT_WINDOWS","EXECUTABLE","Math","random","currentTop","initX","initY","PDF","Taskbar","clickWindow","useRecoilState","activeWindows","sunk","backgroundColor","boxShadow","outline","outlineOffset","buttonStyle","background","bottom","borderTop","paddingLeft","paddingRight","class","map","gap","maxHeight","TestApp","cowboyState","setCowboyState","overflowY","marginTop","Audio","play","FileExplorer","currentFolder","root","flexFlow","alignContent","item","obj","getFile","border","color","textDecoration","onDoubleClick","openFile","FOLDER","overflow","top","fileMap","dir","desktop","Intro","Demos","testFolder2","Resume","testFolder","ImALoop","file","currWind","getRecoil","newWindowState","length","newFile","undefined","setRecoil","Desktop","whiteSpace","Screen","setActiveWindows","windowRender","setWindowRender","updateState","setUpdateState","toggleRender","closeWindow","delElement","filter","oldZIndex","useEffect","visibility","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fa07fc3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Rnd } from \"react-rnd\";\r\n\r\n//\r\n//position correspond to the upper left corner of the window\r\nexport default function Window({\r\n  content = null,\r\n  title = \"\",\r\n  maximized = false,\r\n  minimized = false,\r\n  initWidth = 100,\r\n  initHeight = 100,\r\n  xPos = 0,\r\n  yPos = 0,\r\n  clickHandle,\r\n  zIndex,\r\n  id,\r\n  active = false,\r\n  style,\r\n  handleMinimize,\r\n  handleClose,\r\n  icon,\r\n}) {\r\n  const [pos, setPos] = useState({ x: xPos, y: yPos });\r\n  const [size, setSize] = useState({ height: initHeight, width: initWidth });\r\n\r\n  const [prevPos, setPrevPos] = useState({ x: xPos, y: yPos });\r\n  const [prevSize, setPrevSize] = useState({\r\n    height: initHeight,\r\n    width: initWidth,\r\n  });\r\n\r\n  const [maximizedState, setMaximizedState] = useState(maximized);\r\n\r\n  const [canDrag, setCanDrag] = useState(false);\r\n\r\n  const maximizeHandler = () => {\r\n    if (!maximizedState) {\r\n      setPrevPos(pos);\r\n      setPos({ x: 0, y: 0 });\r\n      setPrevSize(size);\r\n      let newSize = {\r\n        height: window.innerHeight - 38,\r\n        width: window.innerWidth - 10,\r\n      };\r\n      setSize(newSize);\r\n      setMaximizedState(true);\r\n    } else {\r\n      setPos(prevPos);\r\n      setSize(prevSize);\r\n      setMaximizedState(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Rnd\r\n      default={{\r\n        x: xPos,\r\n        y: yPos,\r\n        width: initWidth,\r\n        height: initHeight,\r\n      }}\r\n      position={{\r\n        x: pos.x,\r\n        y: pos.y,\r\n      }}\r\n      size={{\r\n        height: size.height,\r\n        width: size.width,\r\n      }}\r\n      onDragStop={(e, d) => {\r\n        setPos({ x: d.x, y: d.y });\r\n      }}\r\n      onDragStart={(e, d) => {\r\n        if (maximizedState === true) {\r\n          setSize(prevSize);\r\n          setMaximizedState(false);\r\n        }\r\n      }}\r\n      onResizeStop={(e, direction, ref, delta, position) => {\r\n        setSize({ height: ref.offsetHeight, width: ref.offsetWidth });\r\n      }}\r\n      onMouseDown={() => clickHandle(id, zIndex)}\r\n      minWidth={initWidth}\r\n      minHeight={initHeight}\r\n      disableDragging={!canDrag}\r\n      style={{\r\n        ...style,\r\n        padding: \"2px\",\r\n      }}\r\n      className=\"window\"\r\n    >\r\n      <div\r\n        className={active === true ? \"title-bar\" : \"title-bar inactive\"}\r\n        onMouseLeave={() => {\r\n          setCanDrag(false);\r\n        }}\r\n        onMouseOver={() => {\r\n          setCanDrag(true);\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            maxWidth: size.width - 100,\r\n          }}\r\n        >\r\n          <img\r\n            style={{ padding: \"0px 0px 0px 0px\", margin: \"0px 0px 0px 0px\" }}\r\n            height={16}\r\n            width={16}\r\n            alt=\"\"\r\n            src={icon}\r\n          />\r\n          <div className=\"title-bar-text\" style={{ textOverflow: \"ellipsis\" }}>\r\n            {\" \"}\r\n            {title}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"title-bar-controls\"\r\n          onMouseOver={(e) => {\r\n            e.stopPropagation();\r\n            setCanDrag(false);\r\n          }}\r\n        >\r\n          <button\r\n            aria-label=\"Minimize\"\r\n            onClick={() => {\r\n              handleMinimize(id);\r\n            }}\r\n          />\r\n          <button\r\n            aria-label={maximizedState ? \"Restore\" : \"Maximize\"}\r\n            onClick={() => maximizeHandler()}\r\n          />\r\n          <button\r\n            aria-label=\"Close\"\r\n            onClick={(e) => {\r\n              handleClose(id, e);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: \"95%\" }} className=\"window-body\">\r\n        {content}\r\n      </div>\r\n    </Rnd>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"98.css\";\r\n\r\nconst IntroWindow = () => {\r\n  return (\r\n    <>\r\n      <p style={{ textAlign: \"center\" }}>\r\n        Hello I'm Tomas Kavanagh, this will be my portafolio site, it's meant to\r\n        immitate a functional windows98 desktop, currently a work in progress,\r\n        for now you can visit my github\r\n      </p>\r\n      <br />\r\n      <br />\r\n\r\n      <div className=\"field-row\" style={{ justifyContent: \"center\" }}>\r\n        <button\r\n          style={{ left: 100 }}\r\n          onClick={() => {\r\n            window.open(\"https://github.com/birucan\");\r\n          }}\r\n        >\r\n          github\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nIntroWindow.displayName = \"Intro\";\r\nexport default IntroWindow;\r\n","import React, { ReactElement } from \"react\";\r\nimport \"98.css\";\r\n\r\nconst PDFDisplay = ({ pdf = \"\" }: { pdf: string }): ReactElement => {\r\n  return (\r\n    <>\r\n      <object data={pdf} type=\"application/pdf\" width=\"100%\" height=\"100%\">\r\n        <p>\r\n          Alternative\r\n          <a href={pdf}> link to the PDF!</a>\r\n        </p>\r\n      </object>\r\n    </>\r\n  );\r\n};\r\nPDFDisplay.displayName = \"PDF Viewer\";\r\n\r\nexport default PDFDisplay;\r\n","import { ReactElement } from \"react\";\r\nimport { JsxElement } from \"typescript\";\r\n\r\nexport enum ValidTypeEnum {\r\n  EXECUTABLE = \".exe\",\r\n  JPG = \".jpg\",\r\n  PNG = \".png\",\r\n  PDF = \".pdf\",\r\n  FOLDER = \"\",\r\n  other = \"\",\r\n}\r\n\r\nexport type WindowType = {\r\n  type: ValidTypeEnum;\r\n  window: ReactElement;\r\n  id: number;\r\n  zIndex?: number;\r\n  dir?: FileEnum[];\r\n  currentTop: boolean;\r\n  icon: string;\r\n  title: string;\r\n  minimized: boolean;\r\n  initHeight: number;\r\n  initWidth: number;\r\n  initX: number;\r\n  initY: number;\r\n};\r\nexport enum FileEnum {\r\n  root,\r\n  desktop,\r\n  Intro,\r\n  testFolder2,\r\n  testFolder,\r\n  ImALoop,\r\n  Demos,\r\n  TestApp,\r\n  Resume,\r\n}\r\n","import { atom } from \"recoil\";\r\nimport IntroWindow from \"../components/Applications/IntroWindow/IntroWindow\";\r\nimport PDFDisplay from \"../components/Applications/ResumeDisplay/ResumeDisplay\";\r\nimport { WindowType, ValidTypeEnum } from \"../types\";\r\nexport enum keyList {\r\n  CURRENT_WINDOWS = \"currentWindows\",\r\n}\r\n\r\nexport const currentWindowState = atom<WindowType[]>({\r\n  key: keyList.CURRENT_WINDOWS,\r\n  default: [\r\n    {\r\n      id: 1,\r\n      type: ValidTypeEnum.EXECUTABLE,\r\n      window: <IntroWindow key={Math.random()} />,\r\n      zIndex: 1,\r\n      currentTop: false,\r\n      icon: \"icons/intro.png\",\r\n      title: \"Intro\",\r\n      minimized: false,\r\n      initHeight: 200,\r\n      initWidth: 200,\r\n      initX: 50,\r\n      initY: 20,\r\n    },\r\n    {\r\n      id: 2,\r\n      type: ValidTypeEnum.PDF,\r\n      window: (\r\n        <PDFDisplay\r\n          pdf=\"https://s3.amazonaws.com/birucan.dev/Tomas+Kavanagh+Resume.pdf\"\r\n          key={Math.random()}\r\n        />\r\n      ),\r\n      zIndex: 2,\r\n      currentTop: true,\r\n      title: \"PDF Viewer\",\r\n      icon: \"icons/textFile.png\",\r\n      minimized: false,\r\n      initHeight: 800,\r\n      initWidth: 700,\r\n      initX: 300,\r\n      initY: 50,\r\n    },\r\n  ],\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { currentWindowState } from \"../../State/global\";\r\n\r\nconst Taskbar = ({ handleMinimize, clickWindow }) => {\r\n  const [activeWindows, setActiveWindows] = useRecoilState(currentWindowState);\r\n\r\n  const sunk = {\r\n    backgroundColor: \"#b0b0b0\",\r\n    boxShadow: \"inset -1px -1px #ffffff, inset -2px -2px #dfdfdf\",\r\n    padding: \"2px 11px 0 13px\",\r\n    outline: \"1px dotted #000000\",\r\n    outlineOffset: \"-4px\",\r\n  };\r\n  const buttonStyle = { textAlign: \"right\" };\r\n  return (\r\n    <div\r\n      style={{\r\n        background: \"#c0c0c0\",\r\n        height: 35,\r\n        width: \"100vw\",\r\n        position: \"fixed\",\r\n        bottom: 0,\r\n        left: 0,\r\n        borderTop: \"2px solid #fff\",\r\n        zIndex: 2147483600,\r\n      }}\r\n    >\r\n      <div\r\n        className=\"startButtonContainer\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{\r\n            paddingLeft: 8,\r\n            paddingRight: 5,\r\n            height: 32,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                padding: \"0px 8px 0px 0px\",\r\n                margin: \"0px 0px 0px 0px\",\r\n              }}\r\n              height={24}\r\n              width={24}\r\n              alt=\"\"\r\n              src=\"icons/start.png\"\r\n            />\r\n            <b>Start</b>\r\n          </div>\r\n        </button>\r\n\r\n        <div class=\"status-bar\" />\r\n\r\n        {activeWindows.map((window) => {\r\n          return (\r\n            <>\r\n              <button\r\n                style={\r\n                  window.currentTop && !window.minimized\r\n                    ? { ...sunk, ...buttonStyle }\r\n                    : { ...buttonStyle }\r\n                }\r\n                onClick={() => {\r\n                  window.minimized\r\n                    ? handleMinimize(window.id)\r\n                    : clickWindow(window.id, window.zIndex);\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    gap: 15,\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    style={{\r\n                      maxHeight: \"24px\",\r\n                      maxWidth: \"24px\",\r\n                      padding: \"0px 0px 0px 0px\",\r\n                      margin: \"0px 0px 0px 0px\",\r\n                    }}\r\n                    height={24}\r\n                    width={24}\r\n                    alt=\"\"\r\n                    src={window.icon}\r\n                  />\r\n\r\n                  <div>{window.title}</div>\r\n                </div>\r\n              </button>\r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Taskbar;\r\n","import React, { useState } from \"react\";\r\nimport \"98.css\";\r\n\r\nconst TestApp = () => {\r\n  const [cowboyState, setCowboyState] = useState(\"\");\r\n\r\n  return (\r\n    <div style={{ justifyContent: \"center\", position: \"relative\" }}>\r\n      <div\r\n        style={{\r\n          textAlign: \"center\",\r\n          overflowY: \"scroll\",\r\n          height: \"100px\",\r\n          maxHeight: \"100px\",\r\n        }}\r\n      >\r\n        <p style={{ textAlign: \"center\" }}>{cowboyState}</p>\r\n      </div>\r\n\r\n      <div\r\n        className=\"field-row\"\r\n        style={{\r\n          justifyContent: \"center\",\r\n          marginTop: \"20%\",\r\n        }}\r\n      >\r\n        <button\r\n          style={{ left: 100 }}\r\n          onClick={() => {\r\n            setCowboyState(cowboyState + \"🤠\");\r\n          }}\r\n        >\r\n          Add Cowboy 🤠\r\n        </button>\r\n        <button\r\n          style={{ left: 100 }}\r\n          onClick={() => {\r\n            setCowboyState(cowboyState + \"🐄\");\r\n            new Audio(\"https://s3.amazonaws.com/birucan.dev/moo.wav\").play();\r\n          }}\r\n        >\r\n          Add Cow 🐄\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nTestApp.displayName = \"Test\";\r\nexport default TestApp;\r\n","import React, { useState } from \"react\";\r\nimport \"98.css\";\r\nimport { getFile, openFile } from \"../utils/fileManager\";\r\nimport { FileEnum, ValidTypeEnum } from \"../../../types\";\r\nconst FileExplorer = ({\r\n  currentFolder = [FileEnum.root],\r\n}: {\r\n  currentFolder?: FileEnum[];\r\n}) => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          paddingLeft: 10,\r\n          paddingRight: 10,\r\n          display: \"flex\",\r\n          flexFlow: \"column wrap\",\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          alignContent: \"flex-start\",\r\n        }}\r\n      >\r\n        {currentFolder.map((item) => {\r\n          const obj = getFile(item);\r\n          return (\r\n            <div\r\n              style={{\r\n                position: \"relative\",\r\n                display: \"flex\",\r\n                outline: \"none\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                color: \"initial\",\r\n                textDecoration: \"none\",\r\n                padding: \"1px 7px 2px initial\",\r\n                margin: \"3px\",\r\n                width: \"52px\",\r\n                height: \"58px\",\r\n                textAlign: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                zIndex: 0,\r\n              }}\r\n              onDoubleClick={() => {\r\n                openFile(getFile(item));\r\n              }}\r\n            >\r\n              <img\r\n                height={32}\r\n                width={32}\r\n                alt=\"\"\r\n                src={\r\n                  obj.type === ValidTypeEnum.FOLDER\r\n                    ? \"icons/folder.png\"\r\n                    : obj.icon\r\n                }\r\n              />\r\n              <div\r\n                style={{\r\n                  maxHeight: 22,\r\n                  padding: \"2px 3px\",\r\n                  maxWidth: \"100%\",\r\n                  overflow: \"hidden\",\r\n                  display: \"inline-block\",\r\n                  position: \"absolute\",\r\n                  marginTop: 2,\r\n                  top: 33,\r\n                }}\r\n              >\r\n                {obj.title}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nFileExplorer.displayName = \"Intro\";\r\nexport default FileExplorer;\r\n","import { WindowType, ValidTypeEnum, FileEnum } from \"../../../types\";\r\nimport { currentWindowState } from \"../../../State/global\";\r\nimport IntroWindow from \"../IntroWindow/IntroWindow\";\r\nimport { getRecoil, setRecoil } from \"recoil-nexus\";\r\nimport PDFDisplay from \"../ResumeDisplay/ResumeDisplay\";\r\nimport TestApp from \"../TestApp/TestApp\";\r\nimport FileExplorer from \"../FileExplorer/FileExplorer\";\r\n\r\nexport const fileMap = {\r\n  //folders\r\n\r\n  [FileEnum.root]: {\r\n    type: ValidTypeEnum.FOLDER,\r\n    dir: [FileEnum.desktop],\r\n  },\r\n  [FileEnum.desktop]: {\r\n    type: ValidTypeEnum.FOLDER,\r\n    icon: \"icons/desktop.png\",\r\n    dir: [\r\n      FileEnum.Intro,\r\n      FileEnum.Demos,\r\n      FileEnum.testFolder2,\r\n      FileEnum.Resume,\r\n      FileEnum.TestApp,\r\n    ],\r\n  },\r\n  [FileEnum.testFolder]: {\r\n    title: \"Folder1\",\r\n    type: ValidTypeEnum.FOLDER,\r\n    dir: [FileEnum.ImALoop],\r\n  },\r\n  [FileEnum.ImALoop]: {\r\n    title: \"ImALoop\",\r\n    type: ValidTypeEnum.FOLDER,\r\n    dir: [FileEnum.testFolder],\r\n  },\r\n  [FileEnum.testFolder2]: {\r\n    title: \"Folder2\",\r\n    type: ValidTypeEnum.FOLDER,\r\n    dir: [FileEnum.Resume, FileEnum.testFolder],\r\n  },\r\n  [FileEnum.Demos]: {\r\n    title: \"Demos\",\r\n    type: ValidTypeEnum.FOLDER,\r\n    dir: [],\r\n  },\r\n  //files\r\n  [FileEnum.Intro]: {\r\n    type: ValidTypeEnum.EXECUTABLE,\r\n    currentTop: false,\r\n    window: <IntroWindow />,\r\n    icon: \"icons/intro.png\",\r\n    title: \"Intro\",\r\n    minimized: false,\r\n    initHeight: 200,\r\n    initWidth: 200,\r\n    initX: 20,\r\n    initY: 20,\r\n  },\r\n\r\n  [FileEnum.TestApp]: {\r\n    type: ValidTypeEnum.EXECUTABLE,\r\n    window: <TestApp />,\r\n    /*zIndex:1,*/ currentTop: false,\r\n    icon: \"icons/cowboy.png\",\r\n    title: \"Serious Test\",\r\n    minimized: false,\r\n    initHeight: 200,\r\n    initWidth: 200,\r\n    initX: 20,\r\n    initY: 20,\r\n  },\r\n  [FileEnum.Resume]: {\r\n    type: ValidTypeEnum.PDF,\r\n    window: (\r\n      <PDFDisplay pdf=\"https://s3.amazonaws.com/birucan.dev/Tomas+Kavanagh+Resume.pdf\" />\r\n    ),\r\n    /*zIndex:1,*/ currentTop: false,\r\n    icon: \"icons/textFile.png\",\r\n    title: \"Resume\",\r\n    minimized: false,\r\n    initHeight: 800,\r\n    initWidth: 700,\r\n    initX: 20,\r\n    initY: 20,\r\n  },\r\n};\r\n\r\n//files\r\n\r\nexport const initMap = () => {\r\n  console.log(\"todo\");\r\n};\r\n\r\nexport const getFile = (key: FileEnum): Partial<WindowType> => {\r\n  return fileMap[key];\r\n};\r\nexport const openFile = (file: Partial<WindowType>): void => {\r\n  const currWind = getRecoil(currentWindowState);\r\n  if (file.type === ValidTypeEnum.FOLDER) {\r\n    const newWindowState = currWind.map((window) => {\r\n      return {\r\n        ...window,\r\n        zIndex: window.zIndex ? window.zIndex : currWind.length,\r\n        minimized: false,\r\n        currentTop: false,\r\n      };\r\n    });\r\n    const newFile = {\r\n      ...file,\r\n      title: \"File Explorer\",\r\n      window: <FileExplorer currentFolder={file.dir ? file.dir : undefined} />,\r\n      id: currWind.length + 1,\r\n      zIndex: currWind.length + 1,\r\n      currentTop: true,\r\n      initHeight: 200,\r\n      initWidth: 200,\r\n      initX: 20 + Math.random() * 20,\r\n      initY: 20 + Math.random() * 20,\r\n      minimized: false,\r\n      icon: file.icon ? file.icon : \"icons/folder.png\",\r\n    };\r\n    setRecoil(currentWindowState, [...newWindowState, newFile as WindowType]);\r\n  } else {\r\n    const newWindowState = currWind.map((window) => {\r\n      return {\r\n        ...window,\r\n        id: window.id,\r\n        window: window.window,\r\n        zIndex: window.zIndex ? window.zIndex : currWind.length,\r\n        minimized: false,\r\n        currentTop: false,\r\n      };\r\n    });\r\n    const newFile = {\r\n      ...file,\r\n      id: currWind.length + 1,\r\n      zIndex: currWind.length + 1,\r\n      currentTop: true,\r\n    };\r\n    setRecoil(currentWindowState, [...newWindowState, newFile as WindowType]);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { getFile, openFile, fileMap } from \"../Applications/utils/fileManager\";\r\nimport { ValidTypeEnum, FileEnum } from \"../../types\";\r\n\r\nconst Desktop = () => {\r\n  const desktop = fileMap[FileEnum.desktop].dir;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          paddingLeft: 10,\r\n          paddingRight: 10,\r\n          display: \"flex\",\r\n          flexFlow: \"column wrap\",\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          alignContent: \"flex-start\",\r\n        }}\r\n      >\r\n        {desktop.map((item) => {\r\n          const obj = getFile(item);\r\n          const src =\r\n            obj.type === ValidTypeEnum.FOLDER ? \"icons/folder.png\" : obj.icon;\r\n          return (\r\n            <div\r\n              style={{\r\n                position: \"relative\",\r\n                display: \"flex\",\r\n                outline: \"none\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                color: \"initial\",\r\n                textDecoration: \"none\",\r\n                padding: \"1px 7px 2px initial\",\r\n                margin: \"3px 0px 10px 0px\",\r\n                width: \"52px\",\r\n                minHeight: \"58px\",\r\n                textAlign: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                zIndex: 0,\r\n              }}\r\n              onDoubleClick={() => {\r\n                openFile(obj);\r\n              }}\r\n            >\r\n              <img height={32} width={32} alt=\"\" src={src} />\r\n              <div\r\n                style={{\r\n                  maxHeight: 22,\r\n                  padding: \"2px 3px\",\r\n                  whiteSpace: \"initial\",\r\n                  display: \"inline-block\",\r\n                  position: \"absolute\",\r\n                  marginTop: 2,\r\n                  top: 33,\r\n                }}\r\n              >\r\n                {obj.title}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Desktop;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Window from \"../Window/Window\";\r\nimport IntroWindow from \"../Applications/IntroWindow/IntroWindow\";\r\nimport Taskbar from \"../Taskbar/Taskbar\";\r\nimport Desktop from \"../Desktop/Desktop\";\r\nimport PDFDisplay from \"../Applications/ResumeDisplay/ResumeDisplay\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { currentWindowState } from \"../../State/global\";\r\nconst Screen = () => {\r\n  const [activeWindows, setActiveWindows] = useRecoilState(currentWindowState);\r\n\r\n  //const [windowNum, setWindowNum] = useState(2);\r\n  const [windowRender, setWindowRender] = useState([]);\r\n  const [updateState, setUpdateState] = useState(Math.random());\r\n\r\n  const toggleRender = () => {\r\n    setUpdateState(Math.random());\r\n  };\r\n\r\n  const addWindow = (newWindow) => {\r\n    //setWindowNum(windowNum + 1);\r\n    setActiveWindows(\r\n      activeWindows.map((window) => {\r\n        return {\r\n          ...window,\r\n          id: window.id,\r\n          window: window.window,\r\n          zIndex: window.zIndex,\r\n          currentTop: false,\r\n        };\r\n      })\r\n    );\r\n    setActiveWindows(...activeWindows, {\r\n      id: activeWindows.length,\r\n      window: newWindow,\r\n      zIndex: activeWindows.length,\r\n      currentTop: true,\r\n      // title: title,\r\n      // initHeight: initHeight,\r\n      // initWidth: initWidth,\r\n      // initX: initX,\r\n      // initY: initY,\r\n    });\r\n    toggleRender();\r\n  };\r\n\r\n  const closeWindow = (id, e) => {\r\n    e.stopPropagation();\r\n    //setWindowNum(activeWindows.length - 1);\r\n\r\n    let delElement;\r\n\r\n    setActiveWindows(\r\n      activeWindows.map((window) => {\r\n        if (window.id === id) {\r\n          delElement = window;\r\n          return window;\r\n        } else {\r\n          if (window.zIndex > activeWindows.length) {\r\n            return {\r\n              ...window,\r\n              id: window.id,\r\n              window: window.window,\r\n              zIndex: window.zIndex - 1,\r\n              currentTop: false,\r\n            };\r\n          } else {\r\n            return window;\r\n          }\r\n        }\r\n      })\r\n    );\r\n\r\n    setActiveWindows(activeWindows.filter((item) => item !== delElement));\r\n    toggleRender();\r\n  };\r\n\r\n  const clickWindow = (id, oldZIndex) => {\r\n    setActiveWindows(\r\n      activeWindows.map((window) => {\r\n        if (window.id === id) {\r\n          return {\r\n            ...window,\r\n            zIndex: activeWindows.length,\r\n            currentTop: true,\r\n          };\r\n        } else {\r\n          if (window.zIndex === activeWindows.length) {\r\n            return { ...window, zIndex: oldZIndex, currentTop: false };\r\n          } else {\r\n            return { ...window, currentTop: false };\r\n          }\r\n        }\r\n      })\r\n    );\r\n    toggleRender();\r\n  };\r\n\r\n  const handleMinimize = (id) => {\r\n    setActiveWindows(\r\n      activeWindows.map((window) => {\r\n        if (window.id === id) {\r\n          return {\r\n            ...window,\r\n            minimized: window.minimized ? false : true,\r\n            currentTop: window.minimized ? false : true,\r\n          };\r\n        } else {\r\n          return window;\r\n        }\r\n      })\r\n    );\r\n\r\n    toggleRender();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWindowRender(\r\n      activeWindows.map((window) => {\r\n        return (\r\n          <Window\r\n            zIndex={window.zIndex}\r\n            id={window.id}\r\n            style={{\r\n              zIndex: window.zIndex,\r\n              visibility: window.minimized ? \"hidden\" : \"visible\",\r\n            }}\r\n            content={window.window}\r\n            title={window.title}\r\n            key={window.id}\r\n            initHeight={window.initHeight}\r\n            initWidth={window.initWidth}\r\n            xPos={window.initX}\r\n            yPos={window.initY}\r\n            clickHandle={clickWindow}\r\n            handleClose={closeWindow}\r\n            handleMinimize={handleMinimize}\r\n            active={window.currentTop}\r\n            icon={window.icon}\r\n          />\r\n        );\r\n      })\r\n    );\r\n  }, [updateState, activeWindows.length]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#008080\",\r\n          minHeight: \"100vh\",\r\n          minWidth: \"100vw\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {windowRender}\r\n        <Desktop />\r\n      </div>\r\n      <Taskbar\r\n        activeWindows={activeWindows}\r\n        handleMinimize={handleMinimize}\r\n        clickWindow={clickWindow}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Screen;\r\n","import React, { useState } from \"react\";\r\nimport Screen from \"./components/Screen/Screen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Screen></Screen>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport RecoilNexus from \"recoil-nexus\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <RecoilNexus />\r\n      <App />\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}